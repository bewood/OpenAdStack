<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="microsoft.identityModel" type="Microsoft.IdentityModel.Configuration.MicrosoftIdentityModelSection, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
  </configSections>
  <appSettings />
  <location path="FederationMetadata">
    <system.web>
      <authorization>
        <allow users="*" />
      </authorization>
    </system.web>
  </location>
  <system.web>
    <trace enabled="true" localOnly="false" />
    <customErrors mode="Off" />
    <httpRuntime requestValidationType="IdentityFederation.CustomRequestValidator, IdentityFederation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
    <authorization>
      <deny users="?" />
    </authorization>
    <authentication mode="None" />
    <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <add assembly="Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </assemblies>
    </compilation>
  </system.web>
  <system.webServer>
    <urlCompression doStaticCompression="true" doDynamicCompression="true" dynamicCompressionBeforeCache="true" />
    <modules runAllManagedModulesForAllRequests="true">
      <add name="UrlRoutingModule" type="System.Web.Routing.UrlRoutingModule, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
      <remove name="WebDAVModule" />
      <!-- per http://forums.iis.net/t/1166025.aspx, need this to allow PUT -->
    </modules>
    <handlers>
      <remove name="WebDAV" />
    </handlers>
    <rewrite>
      <rules>
        <!-- Redirects requests from the DHTMLX tree/grid controls to the xml data service -->
        <rule name="dhtmlxgrid paginated xml data">
          <match url="^xdata/([a-zA-Z]+)\.(xml|js)" />
          <conditions>
            <add input="{QUERY_STRING}" pattern="posStart=(\d+)" />
            <add input="##{C:1}##_{QUERY_STRING}" pattern="##([^#]+)##_.*count=(\d+)" />
          </conditions>
          <action type="Rewrite"
                  redirectType="Permanent"
                  url="data/{R:1}.{R:2}?offset={C:1}&amp;count={C:2}"
                  appendQueryString="True" />
        </rule>
      </rules>
    </rewrite>
  </system.webServer>
  <system.serviceModel>
    <services>
      <service name="ApiLayer.EntityService" behaviorConfiguration="ApiLayerBehaviour">
        <endpoint binding="webHttpBinding" contract="ApiLayer.EntityService" />
      </service>
      <service name="ApiLayer.DataService" behaviorConfiguration="ApiLayerBehaviour">
        <endpoint binding="webHttpBinding" contract="ApiLayer.DataService" />
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior name="ApiLayerBehaviour">
          <serviceDebug includeExceptionDetailInFaults="true" />
          <serviceMetadata httpsGetEnabled="true"
                           httpGetEnabled="false" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <bindings>
      <webHttpBinding>
        <binding maxReceivedMessageSize="524288"
                 maxBufferSize="524288">
          <readerQuotas maxStringContentLength="524288"/>
        </binding>
      </webHttpBinding>
    </bindings>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" />
  </system.serviceModel>
  <microsoft.identityModel>
    <service>
      <securityTokenHandlers>
        <add type="OAuthSecurity.SimpleWebTokenHandler, OAuthSecurity, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" >
          <sessionTokenRequirement lifetime="$(SessionTokenRequirementLifetime)" />
        </add>
      </securityTokenHandlers>
      <claimsAuthenticationManager type="IdentityFederation.CustomClaimsAuthenticationManager, IdentityFederation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
      <claimsAuthorizationManager type="IdentityFederation.CustomClaimsAuthorizationManager, IdentityFederation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
      <issuerTokenResolver type="IdentityFederation.CustomIssuerTokenResolver, IdentityFederation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
      <issuerNameRegistry type="IdentityFederation.CustomIssuerNameRegistry, IdentityFederation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <trustedIssuers />
      </issuerNameRegistry>
      <applicationService>
        <claimTypeRequired>
          <!--Following are the claims offered by STS 'https://$(HostedServiceName).accesscontrol.windows.net/'. Add or uncomment claims that you require by your application and then update the federation metadata of this application.-->
          <claimType type="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name" optional="true" />
          <claimType type="http://schemas.microsoft.com/ws/2008/06/identity/claims/role" optional="true" />
          <claimType type="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier" optional="true" />
          <!--<claimType type="http://schemas.microsoft.com/accesscontrolservice/2010/07/claims/identityprovider" optional="true" />-->
        </claimTypeRequired>
      </applicationService>
      <certificateValidation certificateValidationMode="None" />
      <serviceCertificate>
        <certificateReference x509FindType="FindByThumbprint" findValue="11A324F1DDA6A6EC1F7BCF75D0D763C271F17F2D" />
      </serviceCertificate>
      <audienceUris />
      <!-- replaced in build -->
      <federatedAuthentication>
        <wsFederation realm="" issuer="" />
        <!-- replaced in build -->
        <!-- hideFromScript will be true in production, but for now false allows developers to see the cookies-->
        <cookieHandler requireSsl="true" hideFromScript="false" path="/" />
      </federatedAuthentication>
    </service>
  </microsoft.identityModel>
</configuration>